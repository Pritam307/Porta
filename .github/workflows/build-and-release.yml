name: Build & Release

on:
  push:
    branches:
      - main       # trigger on pushes to main branch
      
jobs:
  build-macOS-binaries:
    runs-on: macOS-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install pkg
        run: npm install -g pkg

      # Build binary for current matrix.arch
      - name: Build binary
        run: |
          mkdir -p dist
          PKG_CACHE_PATH=$HOME/.pkg-cache npx pkg . --targets node18-macos-${{ matrix.arch }} --output dist/porta-macos-${{ matrix.arch }}

      # Zip only the binary for this arch
      - name: Zip macOS binary
        run: zip -j dist/porta-macos-${{ matrix.arch }}.zip dist/porta-macos-${{ matrix.arch }}

      # Upload as artifact so release job can use it
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: porta-macos-${{ matrix.arch }}
          path: dist/porta-macos-${{ matrix.arch }}.zip


  build-and-release:
    runs-on: ubuntu-latest
    needs: build-macOS-binaries   # wait for macOS builds to finish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: npm ci

      - name: Install pkg
        run: npm install -g pkg

      - name: Create dist dir
        run: mkdir -p dist

      # Build binaries (Linux + Windows)
      - name: Build linux x64
        run: npx pkg . --targets node18-linux-x64 --output dist/porta-linux-x64

      - name: Build linux arm64
        run: npx pkg . --targets node18-linux-arm64 --output dist/porta-linux-arm64

      - name: Build windows x64
        run: npx pkg . --targets node18-win-x64 --output dist/porta-win-x64.exe

      # Zip them
      - name: Zip linux x64
        run: zip -j dist/porta-linux-x64.zip dist/porta-linux-x64

      - name: Zip linux arm64
        run: zip -j dist/porta-linux-arm64.zip dist/porta-linux-arm64

      - name: Zip windows x64
        run: zip -j dist/porta-win-x64.zip dist/porta-win-x64.exe

      # Download macOS artifacts from previous job
      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: porta-macos-x64
          path: dist/

      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: porta-macos-arm64
          path: dist/

      # Create checksums for all zips
      - name: Create checksums
        run: |
          cd dist
          sha256sum *.zip > checksums.txt
          cd ..

      # Create unique tag for release
      - name: Create tag
        run: |
          TAG=v$(date +'%Y%m%d-%H%M%S')
          echo "TAG=$TAG" >> $GITHUB_ENV
          git tag $TAG
          git push origin $TAG

      # Create GitHub Release and upload artifacts
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          body: Automatic release from main branch
          artifacts: "dist/*.zip,dist/checksums.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
